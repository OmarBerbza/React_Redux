{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nexport const fetchContinents = createAsyncThunk('fetchContinents', async () => {\n  const {\n    data\n  } = await axios.get(\"https://fakeapi.com/continents\");\n  return data;\n});\nconst continentSlice = createSlice({\n  name: 'continents',\n  initialState: {\n    data: [{\n      code: 'AF',\n      nom: 'Africa',\n      surface: 3e10,\n      avatar: 'https://media.istockphoto.com/id/817045128/vector/africa-map-colorful-orange-vector-illustration.jpg?s=612x612&w=0&k=20&c=DXx5sW3jQZyg9fbW1ep7wTGicfxnrS-c_FarBNbogqg=',\n      population: 34,\n      pays: [{\n        nom: 'Morocco',\n        population: 4e7,\n        capital: 'rabat',\n        indepYear: 2022,\n        image: ''\n      }]\n    }, {\n      code: 'EU',\n      nom: 'Europe',\n      surface: 3e20,\n      avatar: 'https://www.worldatlas.com/r/w2560-q80/upload/f3/53/df/europe-map.png',\n      population: 3e4,\n      pays: [{\n        nom: 'Spain',\n        population: 4e8,\n        capital: 'Madrid',\n        indepYear: 2022,\n        image: ''\n      }]\n    }]\n  },\n  reducers: {\n    ajouterPays: (state, action) => {\n      state.data = state.data.map(continent => {\n        if (continent.code === action.payload.continentCode) {\n          return {\n            ...continent,\n            pays: [...continent.pays, action.payload.pays]\n          };\n        }\n        return continent;\n      });\n    },\n    modifierPopulation: (state, action) => {\n      state.data = state.data.map(continent => {\n        if (continent.code === action.payload.code) {\n          return {\n            ...continent,\n            population: action.payload.population\n          };\n        }\n        return continent;\n      });\n    }\n  },\n  extraReducers: {\n    [fetchContinents.fulfilled]: (state, action) => {\n      state.data = action.payload;\n    }\n  }\n});\nexport const {\n  ajouterPays,\n  modifierPopulation\n} = continentSlice.actions;\nexport default continentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchContinents","data","get","continentSlice","name","initialState","code","nom","surface","avatar","population","pays","capital","indepYear","image","reducers","ajouterPays","state","action","map","continent","payload","continentCode","modifierPopulation","extraReducers","fulfilled","actions","reducer"],"sources":["C:/Users/omarb/OneDrive/Bureau/DEV 202/React/Exercice Redux/efm-casa-toolkit/src/slices/continentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\n\nexport const fetchContinents = createAsyncThunk('fetchContinents', async () => {\n    const {data} = await axios.get(\"https://fakeapi.com/continents\")\n    return data\n})\n\nconst continentSlice = createSlice({\n    name: 'continents',\n    initialState: {\n\n        data : [\n            {\n                code: 'AF',\n                nom: 'Africa',\n                surface: 3e10,\n                avatar: 'https://media.istockphoto.com/id/817045128/vector/africa-map-colorful-orange-vector-illustration.jpg?s=612x612&w=0&k=20&c=DXx5sW3jQZyg9fbW1ep7wTGicfxnrS-c_FarBNbogqg=',\n                population: 34,\n                pays: [\n                    {\n                        nom: 'Morocco',\n                        population: 4e7,\n                        capital: 'rabat',\n                        indepYear: 2022,\n                        image: '',\n                    }\n                ]\n            },\n            \n            {\n                code: 'EU',\n                nom: 'Europe',\n                surface: 3e20,\n                avatar: 'https://www.worldatlas.com/r/w2560-q80/upload/f3/53/df/europe-map.png',\n                population: 3e4,\n                pays: [\n                    {\n                        nom: 'Spain',\n                        population: 4e8,\n                        capital: 'Madrid',\n                        indepYear: 2022,\n                        image: '',\n                    }\n                ]\n            },\n        ]\n    },\n    reducers: {\n        ajouterPays: (state, action) => {\n            state.data = state.data.map((continent)  => {\n                if(continent.code === action.payload.continentCode){\n                    return {\n                        ...continent,\n                        pays: [\n                            ...continent.pays,\n                            action.payload.pays\n                        ],\n                    }\n                }\n                return continent;\n            })\n        },\n        modifierPopulation: (state, action) => {\n            state.data = state.data.map((continent) => {\n                if(continent.code === action.payload.code){\n                    return {\n                        ...continent,\n                        population: action.payload.population,\n                    }\n                }\n                return continent\n            })\n        }\n    },\n    extraReducers: {\n        [fetchContinents.fulfilled] : (state, action) => {\n            state.data = action.payload\n        }\n    }\n})\n\nexport const { ajouterPays, modifierPopulation } = continentSlice.actions;\nexport default continentSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,eAAe,GAAGF,gBAAgB,CAAC,iBAAiB,EAAE,YAAY;EAC3E,MAAM;IAACG;EAAI,CAAC,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,gCAAgC,CAAC;EAChE,OAAOD,IAAI;AACf,CAAC,CAAC;AAEF,MAAME,cAAc,GAAGN,WAAW,CAAC;EAC/BO,IAAI,EAAE,YAAY;EAClBC,YAAY,EAAE;IAEVJ,IAAI,EAAG,CACH;MACIK,IAAI,EAAE,IAAI;MACVC,GAAG,EAAE,QAAQ;MACbC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,wKAAwK;MAChLC,UAAU,EAAE,EAAE;MACdC,IAAI,EAAE,CACF;QACIJ,GAAG,EAAE,SAAS;QACdG,UAAU,EAAE,GAAG;QACfE,OAAO,EAAE,OAAO;QAChBC,SAAS,EAAE,IAAI;QACfC,KAAK,EAAE;MACX,CAAC;IAET,CAAC,EAED;MACIR,IAAI,EAAE,IAAI;MACVC,GAAG,EAAE,QAAQ;MACbC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE,uEAAuE;MAC/EC,UAAU,EAAE,GAAG;MACfC,IAAI,EAAE,CACF;QACIJ,GAAG,EAAE,OAAO;QACZG,UAAU,EAAE,GAAG;QACfE,OAAO,EAAE,QAAQ;QACjBC,SAAS,EAAE,IAAI;QACfC,KAAK,EAAE;MACX,CAAC;IAET,CAAC;EAET,CAAC;EACDC,QAAQ,EAAE;IACNC,WAAW,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAAChB,IAAI,GAAGgB,KAAK,CAAChB,IAAI,CAACkB,GAAG,CAAEC,SAAS,IAAM;QACxC,IAAGA,SAAS,CAACd,IAAI,KAAKY,MAAM,CAACG,OAAO,CAACC,aAAa,EAAC;UAC/C,OAAO;YACH,GAAGF,SAAS;YACZT,IAAI,EAAE,CACF,GAAGS,SAAS,CAACT,IAAI,EACjBO,MAAM,CAACG,OAAO,CAACV,IAAI;UAE3B,CAAC;QACL;QACA,OAAOS,SAAS;MACpB,CAAC,CAAC;IACN,CAAC;IACDG,kBAAkB,EAAE,CAACN,KAAK,EAAEC,MAAM,KAAK;MACnCD,KAAK,CAAChB,IAAI,GAAGgB,KAAK,CAAChB,IAAI,CAACkB,GAAG,CAAEC,SAAS,IAAK;QACvC,IAAGA,SAAS,CAACd,IAAI,KAAKY,MAAM,CAACG,OAAO,CAACf,IAAI,EAAC;UACtC,OAAO;YACH,GAAGc,SAAS;YACZV,UAAU,EAAEQ,MAAM,CAACG,OAAO,CAACX;UAC/B,CAAC;QACL;QACA,OAAOU,SAAS;MACpB,CAAC,CAAC;IACN;EACJ,CAAC;EACDI,aAAa,EAAE;IACX,CAACxB,eAAe,CAACyB,SAAS,GAAI,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAAChB,IAAI,GAAGiB,MAAM,CAACG,OAAO;IAC/B;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL,WAAW;EAAEO;AAAmB,CAAC,GAAGpB,cAAc,CAACuB,OAAO;AACzE,eAAevB,cAAc,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}